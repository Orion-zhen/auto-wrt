name: Otto Build

on:
  workflow_dispatch:
    inputs:
      debug:
        type: boolean
        description: debug build
        default: false
      use-defconfig:
        type: boolean
        description: use default config
        default: false

jobs:
  otto-build:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Setup Build Environment
        run: |
          sudo apt update -y
            sudo apt full-upgrade -y
            sudo apt install -y ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential \
              bzip2 ccache clang cmake cpio curl device-tree-compiler ecj fastjar flex gawk gettext gcc-multilib \
              g++-multilib git gnutls-dev gperf haveged help2man intltool lib32gcc-s1 libc6-dev-i386 libelf-dev \
              libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses-dev libpython3-dev \
              libreadline-dev libssl-dev libtool libyaml-dev libz-dev lld llvm lrzsz mkisofs msmtp nano \
              ninja-build p7zip p7zip-full patch pkgconf python3 python3-full python3-setuptools python3-pip python3-ply python3-docutils \
              python3-pyelftools python3-netifaces qemu-utils re2c rsync scons squashfs-tools subversion swig texinfo uglifyjs \
              upx-ucl unzip vim wget xmlto xxd zlib1g-dev zstd tree

      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Fetch Source Code
        uses: actions/checkout@v4
        with:
          repository: immortalwrt/immortalwrt
          ref: master
          path: ./openwrt

      # - name: Fetch ImmortalWrt Packages
      #   uses: actions/checkout@v4
      #   with:
      #     repository: immortalwrt/packages
      #     ref: master
      #     path: ./openwrt/feeds/packages

      # - name: Fetch LuCI Packages
      #   uses: actions/checkout@v4
      #   with:
      #     repository: immortalwrt/luci
      #     ref: master
      #     path: ./openwrt/feeds/luci

      - name: Feeds
        run: |
          cd ./openwrt
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Customize Config
        if: ${{ !inputs.use-defconfig }}
        run: |
          export FORCE_UNSAFE_CONFIGURE=1
          cd ./openwrt
          cp ../.config .

      - name: Default Config
        if: ${{ inputs.use-defconfig }}
        run: |
          export FORCE_UNSAFE_CONFIGURE=1
          cd ./openwrt
          make defconfig

      - name: Make Download
        run: |
          export FORCE_UNSAFE_CONFIGURE=1
          cd ./openwrt
          make download -j$(nproc)

      - name: Build
        if: ${{ !inputs.debug }}
        run: |
          export FORCE_UNSAFE_CONFIGURE=1
          cd ./openwrt
          make -j$(nproc)

      - name: Debug Build
        if : ${{ inputs.debug }}
        run: |
          export FORCE_UNSAFE_CONFIGURE=1
          cd ./openwrt
          make -j1 V=s

      - name: Delete Stale Release
        if: ${{ !inputs.debug }}
        run: gh release delete otto-build --cleanup-tags --yes
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        continue-on-error: true

      - name: Release
        if: ${{ !inputs.debug }}
        uses: softprops/action-gh-release@v2
        with:
          tag_name: "otto-build"
          name: "OttoWrt"
          draft: false
          prerelease: false
          files: openwrt/bin/targets/x86/64/*.*